/// <binding />
const HtmlWebpackPlugin = require('html-webpack-plugin');
const pkg = require('../../package.json');
const webpack = require('webpack');
const TerserPlugin = require("terser-webpack-plugin");
const fs = require('fs');
const name = pkg.name;
let plugins = [];

module.exports = [
    {
        mode: 'production',
        performance: {
            maxEntrypointSize: 9999999,
            maxAssetSize: 9999999
        },
        entry: { "bundle": '../../../../../../../Portals/_default/Skins/Vanjaro/Resources/js/skin.js' },
        output: {
            filename: `../../../../../../../../Portals/_default/Skins/Vanjaro/Resources/js/skin.min.js`
        },
        module: {
            rules: [{
                test: /\.js$/,
                loader: 'babel-loader',
                include: /src/,
                options: { cacheDirectory: true },
            }],
        },
        optimization: {
            minimizer: [
                new TerserPlugin({
                    terserOptions: {
                        keep_fnames: true,
                    },
                }),
            ],
        },
    },
    {
        mode: 'production',
        performance: {
            maxEntrypointSize: 9999999,
            maxAssetSize: 9999999
        },
        entry: '../../Scripts/',
        output: {
            filename: `../../../Scripts/${name}.min.js`
        },
        module: {
            rules: [{
                test: /\.js$/,
                loader: 'babel-loader',
                include: /src/,
                options: { cacheDirectory: true },
            }],
        },
        plugins: plugins,
    }
]

